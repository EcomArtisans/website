name: Deploy Website 
on:
  push:
    branches:
      - main
  # release:
    # types: [published] 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  push_to_registry:
    name: Push Docker image to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Github Docker Hub
        id: login-ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: EcomArtisans/website
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true  
  deploy:
    needs: push_to_registry 
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.3
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.TOKYO_SSH_IP }}
          port: ${{ secrets.TOKYO_SSH_PORT }}
          username: ${{ secrets.TOKYO_SSH_NAME }}
          key: ${{ secrets.TOKYO_SSH_KEY }}
          envs: GITHUB_USERNAME, PASSWORD
          script: |
            cd /usr/local/apps/website
            docker login -u $GITHUB_USERNAME -p $PASSWORD ghcr.io
            docker pull ghcr.io/ecomartisans/website:main
            docker stack rm ecom-website
            sleep 10
            docker stack deploy --compose-file website.yml ecom-website --with-registry-auth
